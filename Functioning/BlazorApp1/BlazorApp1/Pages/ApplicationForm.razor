@layout MainLayout
@attribute [Authorize(Roles = "User,Administrator")]
@page "/ApplicationForm/{applicationId:int}"
@using BlazorApp1.Authentication;
@using BlazorApp1.Data;
@using EntityFrameWorkDataAccess;
@using EntityFrameWorkDataAccess.Models;
@using EntityFrameworkLibrary.Models;
@inject DatabaseService dbService
@inject NotificationService service
@inject CustomAuthentication customauth
@inject IJSRuntime js;
@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment hostingEnvironment


<body style="background-color:azure">
    <h1 style="padding-left:20px">Přihláška na praxi</h1>
@if (this.authenticated == false)
    {
       <h2 style="padding-left:20px">You dont have permission to this page</h2>       
    }
    else
    {
        <div class="rz-p-0 rz-p-md-12" style="background-color:azure; height:100vh">
            <h4>Informace o studentovi</h4>
            <RadzenColumn Size="12" SizeSM="6">
                <RadzenStack>
                    <RadzenFormField Text="Ulice a číslo" Variant="@variant">
                        <RadzenTextBox @bind-Value="@applicationForm.StreeAndNumber" />
                    </RadzenFormField>
                    <RadzenFormField Text="Město" Variant="@variant">
                        <RadzenTextBox @bind-Value="@applicationForm.City" />
                    </RadzenFormField>
                    <RadzenFormField Text="PSČ" Variant="@variant">
                        <RadzenTextBox @bind-Value="@applicationForm.PSC" />
                    </RadzenFormField>
                    <RadzenFormField Text="Telefonní číslo" Variant="@variant">
                        <RadzenTextBox @bind-Value="@applicationForm.PhoneNumber" />
                    </RadzenFormField>
                    <RadzenFormField Text="Datum Narození" Variant="@variant">
                        <RadzenTextBox @bind-Value="@applicationForm.BirthDate" />
                    </RadzenFormField>
                </RadzenStack>
            </RadzenColumn>
            <br>
            <div class="flex-box-end" style="gap:10px">
                <RadzenButton Click=@Save Text="Save" ButtonStyle="ButtonStyle.Info" />
                <RadzenButton Click=@CreatePDF Text="PDF Export" ButtonStyle="ButtonStyle.Info" />
            </div>
            
        </div>
    }   
</body>
<RadzenNotification></RadzenNotification>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }
    [Parameter]
    public int applicationId { get; set; }
    private Application applicationForm = new();
    private bool authenticated = true;
    private bool disabled;
    Variant variant = Variant.Outlined;
    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();
        this.applicationForm = dbService.GetApplication(applicationId);
        var authState = await authenticationState;
        this.authenticated = customauth.AuthenticateUser(applicationForm,authState);
    }
    public void Save()
    {
        try
        {
            dbService.EditApplication(applicationForm);
        }
        catch (Exception)
        {
            NotificationMessage errorMessage = new NotificationMessage
            {
                Severity = NotificationSeverity.Error,
                Summary = "Error",
                Duration = 4000
            };
            service.Notify(errorMessage);
            return;
        }
        NotificationMessage goodMessage = new NotificationMessage
        {
            Severity = NotificationSeverity.Success,
            Summary = "Approved",
            Detail = "Saved",
            Duration = 4000
        };
        service.Notify(goodMessage);
    }
    protected async Task CreatePDF()
    {
        var authState = await authenticationState;
        tbUser user = dbService.GetUser(authState.User.Identity.Name);
        ExportService service = new ExportService(hostingEnvironment);
        MemoryStream documentStream = service.CreateApplicationPDF(user.Name, user.LastName);

        await js.InvokeAsync<object>(
            "saveAsFile",
            "Invoice.pdf",
            Convert.ToBase64String(documentStream.ToArray())
        );
    }
    
}
