@using BlazorApp1.Authentication;
@using EntityFrameWorkDataAccess;
@using EntityFrameWorkDataAccess.Models;
@using EntityFrameworkLibrary.Models;
@using EntityFrameworkLibrary;
@inject CustomNavigation customNav
@inject DatabaseService dbService
@inject NavigationManager navMan
@inject AuthenticationStateProvider authStateProvider

<nav class="navbar bg-dark navbar-expand-lg bg-body-tertiary" data-bs-theme="dark">
    <div class="container-fluid">
        <a class="navbar-brand">Praxátor</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <AuthorizeView Roles="User">
            <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
                <div class="navbar-nav">
                    <a class="nav-link active" aria-current="page" href="@ContractUrl">Smlouva</a>
                    <a class="nav-link active" href="@ApplicationUrl">Přihláška na praxi</a>
                    <a class="nav-link active" href="@WorkRecordUrl">Záznam o praxi</a>
                    <a class="nav-link active" href="/ContractPDF">Pdf</a>
                    <a class="nav-link active" @onclick=Logout href="/">Logout</a>
                   

                </div>
            </div>
        </AuthorizeView>
        <AuthorizeView Roles="Administrator">
            <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
                <div class="navbar-nav">
                    <a class="nav-link active"href="/ContractList">Seznam smluv</a>
                    <a class="nav-link active" @onclick=Logout href="/">Logout</a>
                </div>
            </div>
        </AuthorizeView>
    </div>
</nav>
@code{
    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }

    private string ContractUrl;
    private string ApplicationUrl;
    private string WorkRecordUrl;

    protected override async Task OnInitializedAsync()
    {
        base.OnInitializedAsync();

        var authState = await authenticationState;
        this.ContractUrl = customNav.NavigateToContract(authState,dbService);
        this.ApplicationUrl = customNav.NavigateToApplicationForm(authState,dbService);
        this.WorkRecordUrl = customNav.NavigateToRecordForm(authState, dbService);


    }
    public async Task Logout()
    {
        var AuthProvider = (CustomAuthentication)authStateProvider;
        await AuthProvider.UpdateAuthenticationState(null);
        navMan.NavigateTo("/", true);
    }
}