@attribute [Authorize(Roles = "Administrator")]
@page "/ContractList"

@using DataAccessLibrary.Interfaces;
@using DataAccessLibrary.Models;
@inject IContractData _dbc
@inject IUserData _dbu



<RadzenDataGrid Data="@this.contracts" TItem="ContractModel" AllowVirtualization="true" Style="height:700px"
                AllowFiltering="false" FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" LogicalFilterOperator="LogicalFilterOperator.Or"
                AllowSorting="false">
    <Columns>
        <RadzenDataGridColumn TItem="ContractModel" Property="OrgName" Title="Název Organizace" />
        <RadzenDataGridColumn TItem="ContractModel" Property="City" Title="Město" />
        <RadzenDataGridColumn TItem="ContractModel" Property="" Title="Jméno žáka" />
        <RadzenDataGridColumn TItem="ContractModel" Property="" Title="Příjmení žáka" />
        <RadzenDataGridColumn TItem="ContractModel" Property="LastChanged" Title="Datum Poslední úpravy" />
        
        
    </Columns>
</RadzenDataGrid>

@code {
    IEnumerable<ContractModel> contracts;
    IEnumerable<UserModel> users;

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();

        this.contracts = await _dbc.GetContracts();
        this.users = await _dbu.GetUsers();     

    }

    
}
