@attribute [Authorize(Roles = "Administrator")]
@page "/ContractList"

@using DataAccessLibrary.Interfaces;
@using DataAccessLibrary.Models;
@using Syncfusion.Blazor.Grids
@inject IContractData _dbc
@inject IUserData _dbu


@*<RadzenDataGrid Data="@this.users" TItem="UserModel" AllowVirtualization="true" Style="height:700px"
                AllowFiltering="false" FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" LogicalFilterOperator="LogicalFilterOperator.Or"
                AllowSorting="false">
    <Columns>
        <RadzenDataGridColumn TItem="UserModel" Property="" Title="Název Organizace" />
        <RadzenDataGridColumn TItem="UserModel" Property="City" Title="Město" />
        <RadzenDataGridColumn TItem="UserModel" Property="Name" Title="Jméno žáka" />
        <RadzenDataGridColumn TItem="UserModel" Property="LastName" Title="Příjmení žáka" />
        <RadzenDataGridColumn TItem="UserModel" Property="LastChanged" Title="Datum Poslední úpravy" />
        
    </Columns>
</RadzenDataGrid>*@

<table>
    <tr style="gap : 20px">
        <th>Název Organizace</th>
        <th>Město</th>
        <th>Jméno žáka</th>
        <th>Příjmení žáka</th>
        <th>Datum Poslední úpravy</th>
    </tr>
    @if (contracts != null)
    {
        @foreach (var item in contracts)
        {
            <tr>
                @if (users != null && contract != null)
                {
                    <td>@item.OrgName</td>
                    <td>@item.City</td>
                    <td>@users.Where(value => value.ContractId == item.Id).Single().Name</td>
                    <td>@users.Where(value => value.ContractId == item.Id).Single().LastName</td>
                    <td>@item.LastChanged</td>
                }

            </tr>
        }

    }
</table>

@*<SfGrid DataSource="@users">
    <GridColumns>
        <GridColumn Field="@nameof(UserModel.Name)" HeaderText="Jméno"></GridColumn>
        <GridColumn Field="@nameof(UserModel.LastName)" HeaderText="Příjmení"></GridColumn>

        <GridForeignColumn Field="@nameof(UserModel.ContractId)" HeaderText="Test" ForeignDataSource="@contracts" ForeignKeyValue="OrgName"></GridForeignColumn>
    </GridColumns>
    
</SfGrid>*@
    



@code {
    [Parameter] public int ContractId { get; set; }
    List<ContractModel> contracts;
    IEnumerable<UserModel> users;
    ContractModel contract = new();

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();
        
        contracts = await _dbc.GetContracts();
        this.users = await _dbu.GetUsers();     

        
    } 
}
